{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/goal.service\";\nimport * as i2 from \"@angular/common\";\nfunction DashboardComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const goal_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate4(\"\", goal_r1.name, \", \", goal_r1.type, \", \", goal_r1.description, \", \", goal_r1.goalToReach, \" \");\n  }\n}\nexport class DashboardComponent {\n  constructor(goalService) {\n    this.goalService = goalService;\n    // property to store user goals\n    this.userGoals = [];\n  }\n  ngOnInit() {\n    this.goalService.getAllGoals().subscribe(response => {\n      console.log(response);\n      this.userGoals = response;\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.GoalService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 25,\n    vars: 1,\n    consts: [[1, \"dash-greeting\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card\", 2, \"width\", \"60rem\", \"height\", \"20rem\"], [1, \"card-body\"], [1, \"card-text\"], [1, \"goal-details-btn\"], [1, \"new-btn\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"br\")(1, \"br\")(2, \"br\")(3, \"br\");\n        i0.ɵɵelementStart(4, \"h1\", 0);\n        i0.ɵɵtext(5, \"Hello\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"br\")(7, \"br\")(8, \"br\")(9, \"br\");\n        i0.ɵɵelementStart(10, \"h3\");\n        i0.ɵɵtext(11, \"List of User Goals\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, DashboardComponent_div_12_Template, 3, 4, \"div\", 1);\n        i0.ɵɵelement(13, \"br\")(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 2)(16, \"div\", 3)(17, \"h1\");\n        i0.ɵɵtext(18, \"My Goal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\", 4);\n        i0.ɵɵtext(20, \"Some quick example text to build on the card title and make up the bulk of the card's content.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"button\", 5);\n        i0.ɵɵtext(22, \"My Goal Details\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 6);\n        i0.ɵɵtext(24, \"Create New Goal\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.userGoals);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".card[_ngcontent-%COMP%] {\\n    margin-left: 255px;\\n    color: #640058;\\n}\\n.new-btn[_ngcontent-%COMP%] {\\n    margin-left: 400px;\\n    color: #640058;\\n}\\n.goal-details-btn[_ngcontent-%COMP%] {\\n    margin-left: 400px;\\n    color: #640058;\\n}\\n.dash-greeting[_ngcontent-%COMP%] {\\n    margin-left: 80px;\\n    color: #640058;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEI7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQixjQUFjO0FBQ2xCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsY0FBYztBQUNsQjtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLGNBQWM7QUFDbEIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XHJcbiAgICBtYXJnaW4tbGVmdDogMjU1cHg7XHJcbiAgICBjb2xvcjogIzY0MDA1ODtcclxufVxyXG4ubmV3LWJ0biB7XHJcbiAgICBtYXJnaW4tbGVmdDogNDAwcHg7XHJcbiAgICBjb2xvcjogIzY0MDA1ODtcclxufVxyXG4uZ29hbC1kZXRhaWxzLWJ0biB7XHJcbiAgICBtYXJnaW4tbGVmdDogNDAwcHg7XHJcbiAgICBjb2xvcjogIzY0MDA1ODtcclxufVxyXG4uZGFzaC1ncmVldGluZyB7XHJcbiAgICBtYXJnaW4tbGVmdDogODBweDtcclxuICAgIGNvbG9yOiAjNjQwMDU4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate4","goal_r1","name","type","description","goalToReach","DashboardComponent","constructor","goalService","userGoals","ngOnInit","getAllGoals","subscribe","response","console","log","_","ɵɵdirectiveInject","i1","GoalService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","DashboardComponent_div_12_Template","ɵɵproperty"],"sources":["C:\\Users\\jford\\Documents\\FSWD\\1134-FINAL\\team-cmd-ers-frontend\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\jford\\Documents\\FSWD\\1134-FINAL\\team-cmd-ers-frontend\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { GoalService } from '../services/goal.service';\r\nimport { Goal } from '../models/goal';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  // property to store user goals\r\n  userGoals: Goal[] = [];\r\n\r\n  constructor(private goalService: GoalService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void{\r\n    this.goalService.getAllGoals().subscribe(response => {\r\n      console.log(response);\r\n      this.userGoals = response;\r\n    })\r\n  }\r\n\r\n}\r\n","<br><br><br><br>\r\n<!-- <h1>Hello {{user.name}}</h1> -->\r\n<h1 class=\"dash-greeting\">Hello</h1>\r\n\r\n<br><br><br><br>\r\n\r\n<h3>List of User Goals</h3>\r\n<div *ngFor = \"let goal of userGoals\">\r\n    <p>{{goal.name}}, {{goal.type}}, {{goal.description}}, {{goal.goalToReach}} </p>\r\n    \r\n</div>\r\n\r\n\r\n<br><br>\r\n<div class=\"card\" style=\"width: 60rem; height: 20rem;\">\r\n    <!-- <i class=\"bi bi-x-lg\"></i> -->\r\n\r\n    <div class=\"card-body\">\r\n        <h1>My Goal</h1>\r\n        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's\r\n            content.</p>\r\n    </div>\r\n   \r\n</div>\r\n<button class=\"goal-details-btn\">My Goal Details</button>\r\n<button class=\"new-btn\">Create New Goal</button>"],"mappings":";;;;;ICOAA,EAAA,CAAAC,cAAA,UAAsC;IAC/BD,EAAA,CAAAE,MAAA,GAAyE;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAA7EH,EAAA,CAAAI,SAAA,GAAyE;IAAzEJ,EAAA,CAAAK,kBAAA,KAAAC,OAAA,CAAAC,IAAA,QAAAD,OAAA,CAAAE,IAAA,QAAAF,OAAA,CAAAG,WAAA,QAAAH,OAAA,CAAAI,WAAA,MAAyE;;;ADChF,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B;IACA,KAAAC,SAAS,GAAW,EAAE;EAItB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACF,WAAW,CAACG,WAAW,EAAE,CAACC,SAAS,CAACC,QAAQ,IAAG;MAClDC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB,IAAI,CAACJ,SAAS,GAAGI,QAAQ;IAC3B,CAAC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBAdUV,kBAAkB,EAAAX,EAAA,CAAAsB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBd,kBAAkB;IAAAe,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT/BhC,EAAA,CAAAkC,SAAA,SAAI;QAEJlC,EAAA,CAAAC,cAAA,YAA0B;QAAAD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAEpCH,EAAA,CAAAkC,SAAA,SAAI;QAEJlC,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAE,MAAA,0BAAkB;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAC3BH,EAAA,CAAAmC,UAAA,KAAAC,kCAAA,iBAGM;QAGNpC,EAAA,CAAAkC,SAAA,UAAI;QACJlC,EAAA,CAAAC,cAAA,cAAuD;QAI3CD,EAAA,CAAAE,MAAA,eAAO;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAChBH,EAAA,CAAAC,cAAA,YAAqB;QAAAD,EAAA,CAAAE,MAAA,sGACT;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAIxBH,EAAA,CAAAC,cAAA,iBAAiC;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAS;QACzDH,EAAA,CAAAC,cAAA,iBAAwB;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAlBxBH,EAAA,CAAAI,SAAA,IAAY;QAAZJ,EAAA,CAAAqC,UAAA,YAAAJ,GAAA,CAAAnB,SAAA,CAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}